<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.achievement.mapper.TeacherInfoMapper">

  <resultMap type="com.achievement.entity.TeacherInfo" id="TeacherInfoMap">
    <result property="teacherId" column="teacher_id" jdbcType="VARCHAR"/>
    <result property="teacherNum" column="teacher_num" jdbcType="VARCHAR"/>
    <result property="subjectId" column="subject_id" jdbcType="VARCHAR"/>
    <result property="phoneUrl" column="phone_url" jdbcType="VARCHAR"/>
    <result property="sex" column="sex" jdbcType="VARCHAR"/>
    <result property="teacherDuty" column="teacher_duty" jdbcType="VARCHAR"/>
    <result property="teacherName" column="teacher_name" jdbcType="VARCHAR"/>
    <result property="telPhone" column="tel_phone" jdbcType="VARCHAR"/>
    <result property="txQq" column="tx_qq" jdbcType="VARCHAR"/>
    <result property="txWx" column="tx_wx" jdbcType="VARCHAR"/>
    <result property="xlWb" column="xl_wb" jdbcType="VARCHAR"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
    <result property="status" column="status" jdbcType="INTEGER"/>
    <result property="insertTime" column="insert_time" jdbcType="TIMESTAMP"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
  </resultMap>

  <!--列集合-->
  <sql id="BASE_COLUMN">
      teacher_id,teacher_num, insert_time, phone_url, remark, sex, status, teacher_name,
       tel_phone, tx_qq, tx_wx, update_time, xl_wb,teacher_duty,subject_id
  </sql>
  <!--表名-->
  <sql id="BASE_TABLE">
		achievement.teacher_info
	</sql>

  <!--通过实体作为筛选条件查询-->
  <select id="list" resultMap="TeacherInfoMap">
    select
    <include refid="BASE_COLUMN"/>
    from
    <include refid="BASE_TABLE"/>
    <where>
      <if test="teacherId != null and teacherId != ''">
        and teacher_id = #{teacherId}
      </if>
      <if test="insertTime != null">
        and insert_time = #{insertTime}
      </if>
      <if test="phoneUrl != null and phoneUrl != ''">
        and phone_url = #{phoneUrl}
      </if>
      <if test="remark != null and remark != ''">
        and remark LIKE CONCAT('%',#{remark},'%')
      </if>
      <if test="sex != null and sex != ''">
        and sex LIKE CONCAT('%',#{sex},'%')
      </if>
      <if test="status != null">
        and status = #{status}
      </if>
      <if test="teacherName != null and teacherName != ''">
        and teacher_name LIKE CONCAT('%',#{teacherName},'%')
      </if>
      <if test="telPhone != null and telPhone != ''">
        and tel_phone LIKE CONCAT('%',#{telPhone},'%')
      </if>
      <if test="txQq != null and txQq != ''">
        and tx_qq LIKE CONCAT('%',#{txQq},'%')
      </if>
      <if test="txWx != null and txWx != ''">
        and tx_wx LIKE CONCAT('%',#{txWx},'%')
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime}
      </if>
      <if test="xlWb != null and xlWb != ''">
        and xl_wb LIKE CONCAT('%',#{xlWb},'%')
      </if>
      <if test="teacherNum != null and teacherNum != ''">
        and teacher_num LIKE CONCAT('%',#{teacherNum},'%')
      </if>
      <if test="teacherDuty != null and teacherDuty != ''">
        and teacher_duty = #{teacherDuty}
      </if>
      <if test="subjectId != null and subjectId != ''">
        and subject_id = #{subjectId}
      </if>
    </where>
  </select>

  <!--新增所有列-->
  <insert id="insert" keyProperty="teacherId" useGeneratedKeys="true" parameterType="java.util.List">
    insert into
    <include refid="BASE_TABLE"/>
    (<include refid="BASE_COLUMN"/>)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.teacherId},#{item.teacherNum}, SYSDATE(), #{item.phoneUrl}, #{item.remark}, #{item.sex},
      #{item.status},
      #{item.teacherName}, #{item.telPhone}, #{item.txQq}, #{item.txWx}, SYSDATE(), #{item.xlWb},
      #{item.teacherDuty}, #{item.subjectId}
      )
    </foreach>
  </insert>

  <!--通过主键修改数据-->
  <update id="update" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
      UPDATE
      <include refid="BASE_TABLE"/>
      <set>
        <if test="item.insertTime != null">
          insert_time = #{insertTime},
        </if>
        <if test="item.phoneUrl != null and item.phoneUrl != ''">
          phone_url = #{item.phoneUrl},
        </if>
        <if test="item.remark != null and item.remark != ''">
          remark = #{item.remark},
        </if>
        <if test="item.sex != null and item.sex != ''">
          sex = #{item.sex},
        </if>
        <if test="item.status != null">
          status = #{item.status},
        </if>
        <if test="item.teacherName != null and item.teacherName != ''">
          teacher_name = #{item.teacherName},
        </if>
        <if test="item.telPhone != null and item.telPhone != ''">
          tel_phone = #{item.telPhone},
        </if>
        <if test="item.txQq != null and item.txQq != ''">
          tx_qq = #{item.txQq},
        </if>
        <if test="item.txWx != null and item.txWx != ''">
          tx_wx = #{item.txWx},
        </if>
        <if test="item.xlWb != null and item.xlWb != ''">
          xl_wb = #{item.xlWb},
        </if>
        <if test="item.teacherNum != null and item.teacherNum != ''">
          teacher_num = #{item.teacherNum},
        </if>
        <if test="item.teacherDuty != null and item.teacherDuty != ''">
          teacher_duty =  #{item.teacherDuty},
        </if>
        <if test="item.subjectId != null and item.subjectId != ''">
          subject_id =  #{item.subjectId},
        </if>
        <if test="item.updateTime==null">
          update_time = SYSDATE(),
        </if>
        <if test="item.updateTime != null">
          update_time = #{item.updateTime},
        </if>
      </set>
      where teacher_id = #{item.teacherId}
    </foreach>
  </update>

  <!--通过主键删除-->
  <delete id="delete">
    delete from
    <include refid="BASE_TABLE"/>
    where teacher_id in
    <foreach collection="list" item="item" index="no" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

</mapper>

